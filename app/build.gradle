plugins {
    id 'com.android.application'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.example.studyguide_assoiateandroid"
        minSdkVersion 19
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {

    // espresso
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    // espresso intents
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.3.0'



    //info - https://developer.android.com/studio/build/multidex#mdex-gradle
    // multidex - for when you use more then 64,000 methods
    def multidex_version = "2.0.1"
    implementation "androidx.multidex:multidex:$multidex_version"

    //timber - for logging
    implementation 'com.jakewharton.timber:timber:4.7.1'

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    // valley
    implementation 'com.android.volley:volley:1.1.1'
    implementation 'androidx.preference:preference:1.1.1'

    // api 'com.google.android.material:material:1.3.0-rc01'

    // Retrofit - https://github.com/square/retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    def paging_version = "2.1.2"

    implementation "androidx.paging:paging-runtime:$paging_version" // For Kotlin use paging-runtime-ktx

    // alternatively - without Android dependencies for testing
    testImplementation "androidx.paging:paging-common:$paging_version" // For Kotlin use paging-common-ktx

    // optional - RxJava support
    implementation "androidx.paging:paging-rxjava2:$paging_version" // For Kotlin use paging-rxjava2-ktx

    //Gson
    implementation 'com.google.code.gson:gson:2.8.6'

    // workManager
    implementation "androidx.work:work-runtime:2.5.0"

    //glide
    implementation "com.github.bumptech.glide:glide:4.10.0"

    // Lifecycle components
    implementation "androidx.lifecycle:lifecycle-viewmodel:2.2.0"
    implementation "androidx.lifecycle:lifecycle-livedata:2.2.0"
    implementation "androidx.lifecycle:lifecycle-common-java8:2.2.0"
    // Lifecycle components
    implementation "android.arch.lifecycle:extensions:1.1.1"


    // Room components - includes testing and androidx
    implementation "androidx.room:room-runtime:2.2.6"
    annotationProcessor "androidx.room:room-compiler:2.2.6"
    androidTestImplementation "androidx.room:room-testing:2.2.6"
    // Room components
    implementation "android.arch.persistence.room:runtime:1.1.1"
    implementation 'androidx.navigation:navigation-fragment:2.3.3'

    // navigation ui
    implementation 'androidx.navigation:navigation-ui:2.3.3'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'
    annotationProcessor "android.arch.persistence.room:compiler:1.1.1"
    androidTestImplementation "android.arch.persistence.room:testing:1.1.1"


    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}